#include <stdio.h>
#include <stdlib.h>
//#include <time.h>
#include <math.h>

typedef float tXYZ[3];

typedef struct stVet {
        int n;
        tXYZ *xyz;
} tVetPtos;

void geraPtos(tVetPtos *np){
     int i;
     
     srand(time(NULL));
    
     for(i=0; i< np->n; i++){
             np->xyz[i][0]= rand()%100;
             np->xyz[i][1]= rand()%80;
             np->xyz[i][2]= 0.0f;
     }
}

void defineCentro(tVetPtos *np){
     int i;
     tXYZ cc;
     cc[0] = cc[1] = cc[2] = 0.0f;
    
     for(i=0; i< np->n; i++){
              cc[0] += np->xyz[i][0];
              cc[1] += np->xyz[i][1];
     }
     cc[0] /= np->n;
     cc[1] /= np->n;
     
     for(i=0; i< np->n; i++){
              np->xyz[i][0] -= cc[0];
              np->xyz[i][1] -= cc[1];
     }
}

void calculaAngulos(tVetPtos *vp)
{
     int i;
     float aa;
     float pi=3.1415565f;
     
     for(i=0; i<vp->n; i++){
              if(vp->xyz[i][0]>=0.0f)
                  if(fabs(vp->xyz[i][0]) <= 0.00001f)
                      if(vp->xyz[i][1]>=0.0f)
                          vp->xyz[i][2] = 90.0f;
                      else                      
                          vp->xyz[i][2] = 270.0f;
                  
                  
                      else
					  {  
                          aa = atan(vp->xyz[i][1] / vp->xyz[i][0]);
                          vp->xyz[i][2] = aa * (180.0f/pi);
					  }   
                  
                      else
					  {  
                          aa = atan(vp->xyz[i][1] / vp->xyz[i][0]);
                          vp->xyz[i][2] = aa * (180.0f/pi);
					  }
     }
}

void ordenaPontos(int n, tVetPtos *ponto)
{
	int troca, i;
	tVetPtos a, pv;
	do {
		troca=0;
		pv=ponto[0];
		for (i=0; i<n; i++)
		{
			a=ponto[i];
			if(pv.xyz>a.xyz)
			{
				ponto[i-1]=a;
				ponto[i]=pv;
				troca++;
			}
			else
				pv=a;
		}
	} while (troca);
	
}

void mostrarPontos(tVetPtos *pontos) // Imprime pontos e angulos
{
	int i;
	tVetPtos *ponto;
	printf("\n n = %d: \n\n",pontos->n);
	printf("\n Pontos: \n\n");
//	system("pause");
	for (i=0; i<pontos->n; i++)
	{
		printf("X = %f; Y = %f; Angulo = %f; \n", pontos->xyz[i][0], pontos->xyz[i][1], pontos->xyz[i][2]);
	}
}


int main(){
    tVetPtos vPtos;
    
    printf("Digite a quantidade de pontos: ");
    scanf("%d", &vPtos.n);
    
    vPtos.xyz = (tXYZ*) malloc(vPtos.n * sizeof(tXYZ));
    if(!vPtos.xyz){
                   printf("\n Vetor nao alocado. \n");
                   exit (0);
    }
    
    geraPtos(&vPtos);
    defineCentro(&vPtos);
    calculaAngulos(&vPtos);
    //ordenaPontos(vPtos.n,&vPtos);
    mostrarPontos(&vPtos);
    
    free(vPtos.xyz);
    getchar();
    system ("pause");
}
